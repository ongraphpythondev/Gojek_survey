# Generated by Django 4.0 on 2022-06-24 17:36

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Earnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(default=0)),
                ('quiz', models.IntegerField(default=0)),
                ('bonus', models.IntegerField(default=0)),
                ('upi', models.CharField(max_length=200, null=True, unique=True)),
                ('pe', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('random_num', models.DecimalField(decimal_places=5, default=0, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(default=None, max_length=500, null=True)),
                ('upiID', models.CharField(max_length=200, null=True, unique=True)),
                ('democaticOpinions', models.IntegerField(default=None, null=True)),
                ('allotmentTriesAfterBecomingFirstParticipant', models.IntegerField(default=None, null=True)),
                ('democaticOpinionResponseTime', models.DateTimeField(default=None, null=True)),
                ('treatement', models.CharField(choices=[('C0', 'C0'), ('T1_L', 'T1_L'), ('T1_R', 'T1_R'), ('Nope', 'Nope')], default='Nope', max_length=500)),
                ('participantStatus', models.CharField(default='notANode', max_length=500, null=True)),
                ('newsStatus', models.CharField(default='', max_length=500, null=True)),
                ('lastSeen', models.DateTimeField(default=None, null=True)),
                ('newsResponseInfoTimeLimit', models.DateTimeField(default=None, null=True)),
                ('newsResponseTimeLimit', models.DateTimeField(default=None, null=True)),
                ('triesCheckOpenNodes', models.IntegerField(default=0)),
                ('totalEarnings', models.IntegerField(default=0)),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='logged_in_user', to='survey.user')),
            ],
        ),
        migrations.CreateModel(
            name='Tracker2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatementName', models.CharField(default=None, max_length=500, null=True, unique=True)),
                ('leftSpots', models.IntegerField(blank=True, default=None, null=True)),
                ('centreSpots', models.IntegerField(blank=True, default=None, null=True)),
                ('rightSpots', models.IntegerField(blank=True, default=None, null=True)),
                ('noPreferenceSpots', models.IntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='T2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodeID', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('participantTypeRequired', models.CharField(blank=True, default='left', max_length=50)),
                ('responseToNews', models.IntegerField(default=None, null=True)),
                ('responseToNewsTimestamp', models.DateTimeField(default=None, null=True)),
                ('status', models.CharField(blank=True, default='outOfService', max_length=50)),
                ('child1ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('child2ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='T1_R',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodeID', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('responseToNews', models.IntegerField(default=None, null=True)),
                ('responseToNewsTimestamp', models.DateTimeField(default=None, null=True)),
                ('status', models.CharField(blank=True, default='outOfService', max_length=50)),
                ('child1ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('child2ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='T1_L',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodeID', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('responseToNews', models.IntegerField(default=None, null=True)),
                ('responseToNewsTimestamp', models.DateTimeField(default=None, null=True)),
                ('status', models.CharField(blank=True, default='outOfService', max_length=50)),
                ('child1ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('child2ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q1', models.IntegerField(default=None, null=True)),
                ('q2', models.IntegerField(default=None, null=True)),
                ('q3', models.IntegerField(default=None, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantViewLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('democraticOpinion1TS', models.DateTimeField(default=None, null=True)),
                ('democraticOpinion2TS', models.DateTimeField(default=None, null=True)),
                ('newsAccuracyTaskTS', models.DateTimeField(default=None, null=True)),
                ('waitingRoomNewTS', models.DateTimeField(default=None, null=True)),
                ('newsResponseInfoTS', models.DateTimeField(default=None, null=True)),
                ('newsResponseTS', models.DateTimeField(default=None, null=True)),
                ('quizTaskTS', models.DateTimeField(default=None, null=True)),
                ('earningsTS', models.DateTimeField(default=None, null=True)),
                ('noSpotsAvailableTS', models.DateTimeField(default=None, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='NewsResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_Response', models.IntegerField(default=None, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Everything',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_source', models.CharField(default='', max_length=800, null=True)),
                ('affiliation', models.BooleanField(default=None, null=True)),
                ('democratic_Opinion', models.CharField(default='', max_length=800, null=True)),
                ('age', models.IntegerField(default=None, null=True)),
                ('gender', models.CharField(default='', max_length=800, null=True)),
                ('religion', models.CharField(default='', max_length=800, null=True)),
                ('state', models.CharField(default='', max_length=800, null=True)),
                ('district', models.CharField(default='', max_length=800, null=True)),
                ('highschool', models.CharField(default='', max_length=800, null=True)),
                ('edu_level', models.CharField(default='', max_length=800, null=True)),
                ('course', models.CharField(default='', max_length=800, null=True)),
                ('checker', models.CharField(default='', max_length=800, null=True)),
                ('voted', models.BooleanField(default=None, null=True)),
                ('social_media_apps', models.CharField(default='', max_length=800, null=True)),
                ('time_spent', models.CharField(default='', max_length=800, null=True)),
                ('sources', models.CharField(default='', max_length=1000, null=True)),
                ('sm_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('tv_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('onp_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('np_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('news_Response', models.IntegerField(default=None, null=True)),
                ('q1', models.IntegerField(default=None, null=True)),
                ('q2', models.IntegerField(default=None, null=True)),
                ('q3', models.IntegerField(default=None, null=True)),
                ('nodeID', models.CharField(default=None, max_length=50, null=True)),
                ('treatment', models.CharField(default=None, max_length=500, null=True)),
                ('news_item', models.CharField(default=None, max_length=500, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='DemocraticOpinion2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(default=None, null=True)),
                ('gender', models.CharField(default='', max_length=800, null=True)),
                ('religion', models.CharField(default='', max_length=800, null=True)),
                ('state', models.CharField(default='', max_length=800, null=True)),
                ('district', models.CharField(default='', max_length=800, null=True)),
                ('highschool', models.CharField(default='', max_length=800, null=True)),
                ('edu_level', models.CharField(default='', max_length=800, null=True)),
                ('course', models.CharField(default='', max_length=800, null=True)),
                ('checker', models.CharField(default='', max_length=800, null=True)),
                ('voted', models.BooleanField(default=None, null=True)),
                ('social_media_apps', models.CharField(default='', max_length=800, null=True)),
                ('time_spent', models.CharField(default='', max_length=800, null=True)),
                ('sources', models.CharField(default='', max_length=1000, null=True)),
                ('sm_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('tv_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('onp_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('np_other', models.CharField(blank=True, default='', max_length=800, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='DemocraticOpinion1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_source', models.CharField(default='', max_length=800, null=True)),
                ('affiliation', models.BooleanField(default=None, null=True)),
                ('democratic_Opinion', models.CharField(default='', max_length=800, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='C0',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodeID', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('responseToNews', models.IntegerField(default=None, null=True)),
                ('responseToNewsTimestamp', models.DateTimeField(default=None, null=True)),
                ('status', models.CharField(blank=True, default='outOfService', max_length=500)),
                ('child1ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('child2ID', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='AllotmentLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triesCheckTracker', models.IntegerField(default=0, null=True)),
                ('triesCheckFirstParticipant', models.IntegerField(default=0, null=True)),
                ('triesCheckThreshold', models.IntegerField(default=0, null=True)),
                ('triesSelectTreatement', models.IntegerField(default=0, null=True)),
                ('triesCheckOpenNodes', models.IntegerField(default=0, null=True)),
                ('triesCheckDeadNodes', models.IntegerField(default=0, null=True)),
                ('triesResetDeadNodeAndParticipant', models.IntegerField(default=0, null=True)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='survey.participant')),
            ],
        ),
        migrations.CreateModel(
            name='AdHocNodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodeID', models.CharField(default='None', max_length=50, null=True)),
                ('responseToNews', models.IntegerField(default=None, null=True)),
                ('responseToNewsTimestamp', models.DateTimeField(default=None, null=True)),
                ('status', models.CharField(blank=True, default='awaitingParticipantResponse', max_length=50)),
                ('participant', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='survey.participant')),
            ],
        ),
    ]
